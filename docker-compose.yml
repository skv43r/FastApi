networks:
  dev:

services:
  nginx:
    build:
      context: ./nginx
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - './nginx/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf'
    depends_on:
      - auth_backend
      - backend
      - frontend
    networks:
      - dev

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dev

  auth_backend:
    build:
      context: ./auth/backend
    ports:
      - "${AUTH_BACKEND_PORT}:8000"
    volumes:
      - ./auth/backend/app:/app
    environment:
      - DATABASE_URL=${AUTH_BACKEND_DB_URL}
    networks:
      - dev

  auth_frontend:
    build: 
      context: ./auth/frontend
    ports:
      - "${AUTH_FRONTEND_PORT}:3000"
    networks:
      - dev

  backend:
    build: 
      context: ./application/backend
    ports:
      - "${BACKEND_PORT}:8000"
    depends_on:
       - postgres
    environment:
      DATABASE_URL: ${DB_URL}
      PYTHONPATH: ${PYTHONPATH}
    networks:
      - dev
    volumes:
      - ./application/backend:/app
      - ./utils:/app/utils

  frontend:
    build: 
      context: ./application/frontend
    ports:
      - "${FRONTEND_PORT}:3000"
    networks:
      - dev

  admin_backend:
    build: 
      context: ./admin/backend
    ports:
      - "${ADMIN_BACKEND_PORT}:5000"
    depends_on:
       - postgres
    environment:
      DATABASE_URL: ${DB_URL}
      PYTHONPATH: ${PYTHONPATH}
    networks:
      - dev
    volumes:
      - ./admin/backend:/app
      - ./utils:/app/utils

  admin_frontend:
    build: 
      context: ./admin/frontend
    ports:
      - "${ADMIN_FRONTEND_PORT}:3000"
    networks:
      - dev

volumes:
  postgres_data: