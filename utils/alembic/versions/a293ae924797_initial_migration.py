"""Initial migration

Revision ID: a293ae924797
Revises: 
Create Date: 2024-12-30 23:51:37.352731

"""
from typing import Sequence, Union
import sqlmodel
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a293ae924797'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('booking',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.Column('trainer_id', sa.Integer(), nullable=True),
    sa.Column('timeslot_id', sa.Integer(), nullable=False),
    sa.Column('dates', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('user_email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('user_phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('branch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('workingHours', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('photos', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('groupclass',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_groupclass_price'), 'groupclass', ['price'], unique=False)
    op.create_table('service',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('photo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_service_name'), 'service', ['name'], unique=False)
    op.create_index(op.f('ix_service_price'), 'service', ['price'], unique=False)
    op.create_index(op.f('ix_service_type'), 'service', ['type'], unique=False)
    op.create_table('trainer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('specialization', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('photo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trainer_name'), 'trainer', ['name'], unique=False)
    op.create_index(op.f('ix_trainer_specialization'), 'trainer', ['specialization'], unique=False)
    op.create_table('timeslot',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trainer_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.Column('group_class_id', sa.Integer(), nullable=True),
    sa.Column('dates', sa.Date(), nullable=False),
    sa.Column('times', sa.Time(), nullable=False),
    sa.Column('available', sa.Boolean(), nullable=False),
    sa.Column('available_spots', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['group_class_id'], ['groupclass.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['service.id'], ),
    sa.ForeignKeyConstraint(['trainer_id'], ['trainer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trainergroup',
    sa.Column('trainer_id', sa.Integer(), nullable=False),
    sa.Column('group_class_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_class_id'], ['groupclass.id'], ),
    sa.ForeignKeyConstraint(['trainer_id'], ['trainer.id'], ),
    sa.PrimaryKeyConstraint('trainer_id', 'group_class_id')
    )
    op.create_table('trainerservice',
    sa.Column('trainer_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['service_id'], ['service.id'], ),
    sa.ForeignKeyConstraint(['trainer_id'], ['trainer.id'], ),
    sa.PrimaryKeyConstraint('trainer_id', 'service_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trainerservice')
    op.drop_table('trainergroup')
    op.drop_table('timeslot')
    op.drop_index(op.f('ix_trainer_specialization'), table_name='trainer')
    op.drop_index(op.f('ix_trainer_name'), table_name='trainer')
    op.drop_table('trainer')
    op.drop_index(op.f('ix_service_type'), table_name='service')
    op.drop_index(op.f('ix_service_price'), table_name='service')
    op.drop_index(op.f('ix_service_name'), table_name='service')
    op.drop_table('service')
    op.drop_index(op.f('ix_groupclass_price'), table_name='groupclass')
    op.drop_table('groupclass')
    op.drop_table('branch')
    op.drop_table('booking')
    # ### end Alembic commands ###
